-- 생산일자가 2022년 5월인 식품들의 식품 id, 식품 이름, 총매출 조회, 총매출 기준 내림차순, 식품 id 기준 오름차순 정렬


SELECT O.PRODUCT_ID, P.PRODUCT_NAME, SUM(O.AMOUNT * P.PRICE) AS TOTAL_SALES
FROM FOOD_PRODUCT P
JOIN FOOD_ORDER O
ON P.PRODUCT_ID = O.PRODUCT_ID
WHERE TIMESTAMPDIFF(MONTH, O.PRODUCE_DATE, '2022-05-31') = 0
AND TIMESTAMPDIFF(MONTH, O.PRODUCE_DATE, '2022-05-01') = 0
GROUP BY O.PRODUCT_ID
ORDER BY 3 DESC, 1





-- 날짜 비교하는 방법 1  : TIMESTAMPDIFF 활용. MONTH를 기준으로 계산하더라도 단순히 월의 숫자만 비교하는게 아닌 일수까지 고려해서 한달을 계산한다.
# SELECT P.PRODUCT_ID, P.PRODUCT_NAME, SUM(O.AMOUNT * P.PRICE) AS TOTAL_SALES
# FROM FOOD_PRODUCT P
# JOIN FOOD_ORDER O
# ON O.PRODUCT_ID = P.PRODUCT_ID
# WHERE 
#     TIMESTAMPDIFF(MONTH, O.PRODUCE_DATE, '2022-05-01') = 0
#     AND
#     TIMESTAMPDIFF(MONTH, O.PRODUCE_DATE, '2022-05-31') = 0
# GROUP BY O.PRODUCT_ID
# ORDER BY TOTAL_SALES DESC, P.PRODUCT_ID


-- 날짜 비교하는 방법 2 : WHERE 날짜 BETWEEN A AND B (A이상 B이하)
# SELECT P.PRODUCT_ID, P.PRODUCT_NAME, SUM(O.AMOUNT * P.PRICE) AS TOTAL_SALES
# FROM FOOD_PRODUCT P
# JOIN FOOD_ORDER O
# ON O.PRODUCT_ID = P.PRODUCT_ID
# WHERE O.PRODUCE_DATE BETWEEN '2022-05-01' AND '2022-05-31'
# GROUP BY O.PRODUCT_ID
# ORDER BY TOTAL_SALES DESC, P.PRODUCT_ID


-- 날짜 비교하는 방법 3 : %로 찾기
-- JOIN을 하지 않고 WHERE 절에 JOIN 조건 명시
-- GROUP BY, ORDER BY에 조회할 컬럼의 번호로 나타낼 수 있다.
# SELECT P.PRODUCT_ID, P.PRODUCT_NAME, SUM(O.AMOUNT) * P.PRICE AS TOTAL_SALES
# FROM FOOD_PRODUCT P, FOOD_ORDER O
# WHERE P.PRODUCT_ID = O.PRODUCT_ID
# AND O.PRODUCE_DATE LIKE '2022-05-%'
# GROUP BY 1
# ORDER BY 3 DESC, 1